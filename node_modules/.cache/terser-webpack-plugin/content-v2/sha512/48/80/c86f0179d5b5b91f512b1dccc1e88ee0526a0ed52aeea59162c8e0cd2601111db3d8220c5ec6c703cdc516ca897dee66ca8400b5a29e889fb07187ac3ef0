{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[309],{703:function(s,n,a){\"use strict\";a.r(n);var e=a(55),r=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"函数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数\"}},[s._v(\"#\")]),s._v(\" 函数\")]),s._v(\" \"),a(\"p\",[s._v(\"下面我们来掌握函数在 TypeScript 中的使用\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"函数定义\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数定义\"}},[s._v(\"#\")]),s._v(\" 函数定义\")]),s._v(\" \"),a(\"p\",[s._v(\"下面是 TS 自动推断的函数类型\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"let hd = ()=>'后盾人'\\n\\nhd='houdunren.com' //更改类型为字符串后将报错\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"p\",[s._v(\"我们可以使用 unknown转为字符串，但这也没有意义\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"let a:string=hd as unknown as string\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[s._v(\"下面是使用显示类型定义函数 ，注意类型要使用大写的\"),a(\"code\",[s._v(\"Function\")]),s._v(\" 这与 string/number/boolean 是有区别\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"let hd:Function\\nhd = ()=>'houdunren.com'\\nconsole.log(hd());\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"参数类型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参数类型\"}},[s._v(\"#\")]),s._v(\" 参数类型\")]),s._v(\" \"),a(\"p\",[s._v(\"下面是没有限定类型的函数定义，代码是不稳定的\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"function sum(a, b) {\\n    return a + b;\\n}\\n\\nconsole.log(sum('a', 3));//a3\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"因为这是个计算函数，下面来设置参数类型，让代码更健壮。\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"因为限定了数值类型，所以函数参数必须传递数值\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"function sum(a: number, b: number) {\\n    return a + b;\\n}\\n\\nconsole.log(sum(2, 3));\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"如果参数是可选的，使用 \"),a(\"code\",[s._v(\"?\")]),s._v(\" 修饰\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"下面的\"),a(\"em\",[s._v(\"ratio\")]),s._v(\" 参数可以不传\")]),s._v(\" \"),a(\"li\",[s._v(\"不传时\"),a(\"em\",[s._v(\"ratio\")]),s._v(\" 值为\"),a(\"code\",[s._v(\"undefined\")])])]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"function sum(a: number, b: number, ratio?: number) {\\n    return a + b;\\n}\\n\\nconsole.log(sum(3, 3));\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"如果参数设置默认值了就不需要可选参数符号\"),a(\"code\",[s._v(\"?\")]),s._v(\"了\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"function sum(a: number, b: number, ratio: number = .8) {\\n    return (a + b) * ratio;\\n}\\n\\nconsole.log(sum(3, 3));\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"返回值类型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#返回值类型\"}},[s._v(\"#\")]),s._v(\" 返回值类型\")]),s._v(\" \"),a(\"p\",[s._v(\"下面是系统自动推断的参数返回值为 \"),a(\"code\",[s._v(\"number\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"function sum(a: number, b: number) {\\n    return a + b;\\n}\\n//函数结构为 function sum(a: number, b: number): number\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"p\",[s._v(\"我们也可以明确返回类型\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"function sum(a: number, b: number): string {\\n    return `计算结果是：${a + b}`;\\n}\\n\\nconsole.log(sum(3, 3));\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"下面是箭头函数的表示方法\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"因为函数体只有一条语句，所以省略了\"),a(\"code\",[s._v(\"{}\")])])]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"let sum = (a: number, b: number): string => `计算结果是：${a + b}`\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\")])]),a(\"p\",[s._v(\"当函数没有明确返回值时，使用 void 类型。TS 会自动推断，建议明确声明 void 类型\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"let hd = (): void => {\\n    console.log('后盾人');\\n}\\nhd()\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"参数声明\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参数声明\"}},[s._v(\"#\")]),s._v(\" 参数声明\")]),s._v(\" \"),a(\"p\",[s._v(\"有时多个函数会用到相同的类型的参数，比如下面的示例\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"let addUser = (user: { name: string; age: number }): void => {\\n  console.log('添加用户')\\n}\\n\\nlet updateUser = (user: { name: string; age: number }): void => {\\n  console.log('更新用户')\\n}\\n\\nupdateUser({ name: '后盾人', age: 18 })\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\")])]),a(\"p\",[s._v(\"我们可以使用 type 对参数对象进行声明，通过这种复用的手段可以很好的优化代码\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"type userType = { name: string; age: number }\\n\\nlet addUser = (user: userType): void => {\\n  console.log('添加用户')\\n}\\n\\nlet updateUser = (user: userType): void => {\\n  console.log('更新用户')\\n}\\n\\nupdateUser({ name: '后盾人', age: 18 })\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"函数定义-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数定义-2\"}},[s._v(\"#\")]),s._v(\" 函数定义\")]),s._v(\" \"),a(\"p\",[s._v(\"对没有返回值函数的定义\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"let hd: () => void\\n\\nhd = (): void => console.log('后盾人')\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\")])]),a(\"p\",[s._v(\"下例是对 hd 函数的定义\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"函数定义中声明的变量 a，在具体实现函数是可以为任何名称\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"let hd: (a: number, b: number) => number\\n\\nhd = (x: number, y: number): number => {\\n    return x + y\\n}\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"也可以在声明函数时就定义函数的结构\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"let hd: (a: number, b: number) => number = (x: number, y: number): number => {\\n    return x + y;\\n}\\n\\nconsole.log(hd(2, 3));\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"参数是对象结构的函数定义\")]),s._v(\" \"),a(\"ul\",[a(\"li\",[s._v(\"下例中的参数 \"),a(\"code\",[s._v(\"u\")]),s._v(\" 不定义类型结构，TS 也是可以推断出来的\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"let addUser: (user: { name: string, age: number }) => boolean;\\n\\naddUser = (u: { name: string, age: number }): boolean => {\\n    console.log('添加用户');\\n\\n    return true;\\n}\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\")])]),a(\"p\",[s._v(\"上例中使用了重复的参数描述 \"),a(\"code\",[s._v(\"{ name: string, age: number }\")]),s._v(\" ，下面我们将参数对象使用 type进行描述，就可以很好的优化代码\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"type userType = { name: string, age: number }\\n\\nlet addUser: (user: userType) => boolean;\\n\\naddUser = (u: userType): boolean => {\\n    console.log('添加用户');\\n\\n    return true;\\n}\\n\\naddUser({ name: '后盾人', age: 12 })\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\")])]),a(\"p\",[s._v(\"上面是将参数使用 type 进行了描述，我们也可以将函数结构使用 type 进行描述\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"type userType = { name: string, age: number }\\n\\ntype addUserFunc = (user: userType) => boolean;\\n\\nlet addUser: addUserFunc = (u: userType): boolean => {\\n    console.log('添加用户');\\n\\n    return true;\\n}\\n\\naddUser({ name: '后盾人', age: 12 })\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"剩余参数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#剩余参数\"}},[s._v(\"#\")]),s._v(\" 剩余参数\")]),s._v(\" \"),a(\"p\",[s._v(\"下面的求合函数接收多个参数\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"function sum(...args: any[]): number {\\n    return args.reduce((s, n) => s + n, 0);\\n}\\n\\nconsole.log(sum(1, 2, 3, 4, 5));\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"下面通过第二个参数接收剩余参数，来实现数据追加的示例\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"function push(arr: any[], ...args: any[]): any[] {\\n    arr.push(...args)\\n    return arr;\\n}\\n\\nconst hd: any[] = ['houdunren.com']\\n\\nconsole.log(push(hd, '向军', '后盾人')); // [ 'houdunren.com', '向军', '后盾人' ]\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"tuple元组\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#tuple元组\"}},[s._v(\"#\")]),s._v(\" Tuple元组\")]),s._v(\" \"),a(\"p\",[s._v(\"元组与数组类似，但元组要为每个值进行类型声明。\")]),s._v(\" \"),a(\"p\",[s._v(\"数组只是定义了值的类型，并没有约束某个位置的值必须是什么类型，请看下例\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"const arr: (number | string | boolean)[] = ['后盾人', 2030, true];\\n\\narr[1] = 'houdunren.com' //不会报错，可以将原来是数值的更改为字符串，这是数组允许的类型范围\\narr[10] = '向军老师' \\t\\t\\t//不会报错，类型也是允许的\\nconsole.log(arr);\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\")])]),a(\"p\",[s._v(\"下面看使用元组来限制值的类型\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"const hd: [string, number] = ['后盾人', 2030]\\nhd[0] = true //报错，第一个值必须是字符串\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\")])])])}),[],!1,null,null,null);n.default=r.exports}}]);","extractedComments":[]}